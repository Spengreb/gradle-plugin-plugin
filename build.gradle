plugins {
  id "com.iadams.gradle-plugin-plugin" version "0.1"
  id "com.github.kt3k.coveralls" version "2.4.0x"
}

version = '0.2'
group = 'com.iadams.gradle.plugins'

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
  compile "org.sonarqube.gradle:gradle-sonarqube-plugin:1.0"
  compile "com.gradle.publish:plugin-publish-plugin:0.9.2"
  compile "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.12.1"

  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4', {
    exclude module: 'groovy-all'
  }
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

// Add the classpath file to the test runtime classpath
dependencies {
  testRuntime files(createClasspathManifest)
}

pluginBundle {
  website = 'https://github.com/iwarapter/gradle-plugin-plugin'
  vcsUrl = 'https://github.com/iwarapter/gradle-plugin-plugin'
  description = 'An (opinionated) plugin for creating gradle plugins.'
  tags = ['gradle-plugin']

  plugins {
    pluginPlugin {
      id = 'com.iadams.gradle-plugin-plugin'
      displayName = 'Gradle Plugin Plugin'
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
  }
}
